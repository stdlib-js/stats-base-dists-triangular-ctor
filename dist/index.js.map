{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-restricted-syntax, no-invalid-this */\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( '@stdlib/utils-define-property' );\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar setReadOnlyAccessor = require( '@stdlib/utils-define-nonenumerable-read-only-accessor' );\nvar isNumber = require( '@stdlib/assert-is-number' ).isPrimitive;\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar entropy = require( '@stdlib/stats-base-dists-triangular-entropy' );\nvar kurtosis = require( '@stdlib/stats-base-dists-triangular-kurtosis' );\nvar mean = require( '@stdlib/stats-base-dists-triangular-mean' );\nvar median = require( '@stdlib/stats-base-dists-triangular-median' );\nvar mode = require( '@stdlib/stats-base-dists-triangular-mode' );\nvar skewness = require( '@stdlib/stats-base-dists-triangular-skewness' );\nvar stdev = require( '@stdlib/stats-base-dists-triangular-stdev' );\nvar variance = require( '@stdlib/stats-base-dists-triangular-variance' );\nvar cdf = require( '@stdlib/stats-base-dists-triangular-cdf' );\nvar logcdf = require( '@stdlib/stats-base-dists-triangular-logcdf' );\nvar logpdf = require( '@stdlib/stats-base-dists-triangular-logpdf' );\nvar mgf = require( '@stdlib/stats-base-dists-triangular-mgf' );\nvar pdf = require( '@stdlib/stats-base-dists-triangular-pdf' );\nvar quantile = require( '@stdlib/stats-base-dists-triangular-quantile' );\nvar format = require( '@stdlib/string-format' );\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {Probability} evaluated CDF\n*/\nfunction triangularCDF( x ) {\n\treturn cdf( x, this.a, this.b, this.c );\n}\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n*/\nfunction triangularLogCDF( x ) {\n\treturn logcdf( x, this.a, this.b, this.c );\n}\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n*/\nfunction triangularLogPDF( x ) {\n\treturn logpdf( x, this.a, this.b, this.c );\n}\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @private\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n*/\nfunction triangularMGF( t ) {\n\treturn mgf( t, this.a, this.b, this.c );\n}\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n*/\nfunction triangularPDF( x ) {\n\treturn pdf( x, this.a, this.b, this.c );\n}\n\n/**\n* Evaluates the quantile function.\n*\n* @private\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n*/\nfunction triangularQuantile( p ) {\n\treturn quantile( p, this.a, this.b, this.c );\n}\n\n\n// MAIN //\n\n/**\n* Triangular distribution constructor.\n*\n* @constructor\n* @param {number} [a=0.0] - minimum support\n* @param {number} [b=1.0] - maximum support\n* @param {number} [c=0.5] - mode\n* @throws {TypeError} `a` must be a number\n* @throws {TypeError} `b` must be a number\n* @throws {TypeError} `c` must be a number\n* @throws {RangeError} `a` must be less than or equal to `b` and `c`\n* @throws {RangeError} `b` must be greater than or equal to `a` and `b`\n* @throws {RangeError} `c` must be greater than or equal to `a` and smaller than or equal to `b`\n* @returns {Triangular} distribution instance\n*\n* @example\n* var triangular = new Triangular( 0.0, 1.0, 0.25 );\n*\n* var y = triangular.cdf( 0.8 );\n* // returns ~0.947\n*\n* var mu = triangular.mean;\n* // returns ~0.417\n*/\nfunction Triangular() {\n\tvar a;\n\tvar b;\n\tvar c;\n\tif ( !(this instanceof Triangular) ) {\n\t\tif ( arguments.length === 0 ) {\n\t\t\treturn new Triangular();\n\t\t}\n\t\treturn new Triangular( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\n\t}\n\tif ( arguments.length ) {\n\t\ta = arguments[ 0 ];\n\t\tb = arguments[ 1 ];\n\t\tc = arguments[ 2 ];\n\t\tif ( !isNumber( a ) || isnan( a ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Minimum support must be a number. Value: `%s`.', a ) );\n\t\t}\n\t\tif ( !isNumber( b ) || isnan( b ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Maximum support must be a number. Value: `%s`.', b ) );\n\t\t}\n\t\tif ( !isNumber( c ) || isnan( c ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Mode must be a number. Value: `%s`.', c ) );\n\t\t}\n\t\tif ( !( a <= c && c <= b ) ) {\n\t\t\tthrow new RangeError( format( 'invalid arguments. Parameters must satisfy the following condition: %s. a: `%f`. b: `%f`. c: `%f`.', 'a <= c <= b', a, b, c ) );\n\t\t}\n\t} else {\n\t\ta = 0.0;\n\t\tb = 1.0;\n\t\tc = 0.5;\n\t}\n\tdefineProperty( this, 'a', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn a;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isNumber( value ) || isnan( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\tif ( value > b || value > c ) {\n\t\t\t\tthrow new RangeError( format( 'invalid assignment. Must be less than or equal to both the maximum support and the mode. Value: `%f`.', value ) );\n\t\t\t}\n\t\t\ta = value;\n\t\t}\n\t});\n\tdefineProperty( this, 'b', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn b;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isNumber( value ) || isnan( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\tif ( a > value || c > value ) {\n\t\t\t\tthrow new RangeError( format( 'invalid assignment. Must be greater than or equal to both the minimum support and the mode. Value: `%f`.', value ) );\n\t\t\t}\n\t\t\tb = value;\n\t\t}\n\t});\n\tdefineProperty( this, 'c', {\n\t\t'configurable': false,\n\t\t'enumerable': true,\n\t\t'get': function get() {\n\t\t\treturn c;\n\t\t},\n\t\t'set': function set( value ) {\n\t\t\tif ( !isNumber( value ) || isnan( value ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid assignment. Must be a number. Value: `%s`.', value ) );\n\t\t\t}\n\t\t\tif ( a > value || b < value ) {\n\t\t\t\tthrow new RangeError( format( 'invalid assignment. Must be greater than or equal to the minimum support and less than or equal to the maximum support. Value: `%f`.', value ) );\n\t\t\t}\n\t\t\tc = value;\n\t\t}\n\t});\n\treturn this;\n}\n\n/**\n* Triangular distribution differential entropy.\n*\n* @name entropy\n* @memberof Triangular.prototype\n* @type {number}\n* @see [differential entropy]{@link https://en.wikipedia.org/wiki/Entropy_%28information_theory%29}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.entropy;\n* // returns ~1.886\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'entropy', function get() {\n\treturn entropy( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution excess kurtosis.\n*\n* @name kurtosis\n* @memberof Triangular.prototype\n* @type {number}\n* @see [kurtosis]{@link https://en.wikipedia.org/wiki/Kurtosis}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.kurtosis;\n* // returns -0.6\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'kurtosis', function get() {\n\treturn kurtosis( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution expected value.\n*\n* @name mean\n* @memberof Triangular.prototype\n* @type {number}\n* @see [expected value]{@link https://en.wikipedia.org/wiki/Expected_value}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.mean;\n* // returns ~8.667\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'mean', function get() {\n\treturn mean( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution median.\n*\n* @name median\n* @memberof Triangular.prototype\n* @type {number}\n* @see [median]{@link https://en.wikipedia.org/wiki/Median}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.median;\n* // returns ~8.899\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'median', function get() {\n\treturn median( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution mode.\n*\n* @name mode\n* @memberof Triangular.prototype\n* @type {number}\n* @see [mode]{@link https://en.wikipedia.org/wiki/Mode_%28statistics%29}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.mode;\n* // returns 10.0\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'mode', function get() {\n\treturn mode( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution skewness.\n*\n* @name skewness\n* @memberof Triangular.prototype\n* @type {number}\n* @see [skewness]{@link https://en.wikipedia.org/wiki/Skewness}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.skewness;\n* // returns ~-0.422\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'skewness', function get() {\n\treturn skewness( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution standard deviation.\n*\n* @name stdev\n* @memberof Triangular.prototype\n* @type {PositiveNumber}\n* @see [standard deviation]{@link https://en.wikipedia.org/wiki/Standard_deviation}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.stdev;\n* // returns ~1.7\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'stdev', function get() {\n\treturn stdev( this.a, this.b, this.c );\n});\n\n/**\n* Triangular distribution variance.\n*\n* @name variance\n* @memberof Triangular.prototype\n* @type {PositiveNumber}\n* @see [variance]{@link https://en.wikipedia.org/wiki/Variance}\n*\n* @example\n* var triangular = new Triangular( 4.0, 12.0, 10.0 );\n*\n* var v = triangular.variance;\n* // returns ~2.889\n*/\nsetReadOnlyAccessor( Triangular.prototype, 'variance', function get() {\n\treturn variance( this.a, this.b, this.c );\n});\n\n/**\n* Evaluates the cumulative distribution function (CDF).\n*\n* @name cdf\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {Probability} evaluated CDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.cdf( 3.0 );\n* // returns 0.5\n*/\nsetReadOnly( Triangular.prototype, 'cdf', triangularCDF );\n\n/**\n* Evaluates the natural logarithm of the cumulative distribution function (CDF).\n*\n* @name logcdf\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logCDF\n* @see [cdf]{@link https://en.wikipedia.org/wiki/Cumulative_distribution_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.logcdf( 3.0 );\n* // returns ~-0.693\n*/\nsetReadOnly( Triangular.prototype, 'logcdf', triangularLogCDF );\n\n/**\n* Evaluates the natural logarithm of the probability density function (PDF).\n*\n* @name logpdf\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated logPDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.logpdf( 2.4 );\n* // returns ~-0.916\n*/\nsetReadOnly( Triangular.prototype, 'logpdf', triangularLogPDF );\n\n/**\n* Evaluates the moment-generating function (MGF).\n*\n* @name mgf\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {number} t - input value\n* @returns {number} evaluated MGF\n* @see [mgf]{@link https://en.wikipedia.org/wiki/Moment-generating_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.mgf( 0.5 );\n* // returns ~4.576\n*/\nsetReadOnly( Triangular.prototype, 'mgf', triangularMGF );\n\n/**\n* Evaluates the probability density function (PDF).\n*\n* @name pdf\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {number} x - input value\n* @returns {number} evaluated PDF\n* @see [pdf]{@link https://en.wikipedia.org/wiki/Probability_density_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.pdf( 2.4 );\n* // returns ~0.40\n*/\nsetReadOnly( Triangular.prototype, 'pdf', triangularPDF );\n\n/**\n* Evaluates the quantile function.\n*\n* @name quantile\n* @memberof Triangular.prototype\n* @type {Function}\n* @param {Probability} p - input probability\n* @returns {number} evaluated quantile function\n* @see [quantile function]{@link https://en.wikipedia.org/wiki/Quantile_function}\n*\n* @example\n* var triangular = new Triangular( 2.0, 4.0, 3.0 );\n*\n* var v = triangular.quantile( 0.5 );\n* // returns 3.0\n*/\nsetReadOnly( Triangular.prototype, 'quantile', triangularQuantile );\n\n\n// EXPORTS //\n\nmodule.exports = Triangular;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Triangular distribution constructor.\n*\n* @module @stdlib/stats-base-dists-triangular-ctor\n*\n* @example\n* var Triangular = require( '@stdlib/stats-base-dists-triangular-ctor' );\n*\n* var triangular = new Triangular( 0.0, 1.0, 0.5 );\n*\n* var y = triangular.cdf( 0.8 );\n* // returns 0.92\n*\n* var mu = triangular.mean;\n* // returns 0.5\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "defineProperty", "setReadOnly", "setReadOnlyAccessor", "isNumber", "isnan", "entropy", "kurtosis", "mean", "median", "mode", "skewness", "stdev", "variance", "cdf", "logcdf", "logpdf", "mgf", "pdf", "quantile", "format", "triangularCDF", "x", "triangularLogCDF", "triangularLogPDF", "triangularMGF", "triangularPDF", "triangularQuantile", "p", "Triangular", "a", "b", "c", "value", "main"]
}
